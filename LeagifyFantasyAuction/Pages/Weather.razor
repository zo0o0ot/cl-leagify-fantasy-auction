@page "/weather"
@inject HttpClient Http

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="weather-table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToString("MMM dd, yyyy")</td>
                    <td>@forecast.TemperatureC°C</td>
                    <td>@forecast.TemperatureF°F</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

<style>
    .weather-table { width: 100%; border-collapse: collapse; margin: 20px 0; }
    .weather-table th, .weather-table td { padding: 8px 12px; border: 1px solid #dee2e6; text-align: left; }
    .weather-table th { background: #f8f9fa; font-weight: 600; }
    .weather-table tr:nth-child(even) { background: #f8f9fa; }
</style>

@code {
    private List<WeatherForecast>? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<List<WeatherForecast>>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
