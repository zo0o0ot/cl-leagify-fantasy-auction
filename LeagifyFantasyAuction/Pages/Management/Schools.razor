@page "/management/schools"
@layout ManagementLayout
@inject HttpClient Http
@inject IJSRuntime JSRuntime

<PageTitle>School Management</PageTitle>

<FluentStack Orientation="Orientation.Vertical" VerticalGap="20">
    <FluentStack Orientation="Orientation.Horizontal" HorizontalAlignment="HorizontalAlignment.SpaceBetween">
        <FluentLabel Typo="Typography.H2">School Management</FluentLabel>
        <FluentStack Orientation="Orientation.Horizontal" HorizontalGap="10">
            <FluentButton Appearance="Appearance.Accent" 
                         IconStart="@(new Icons.Regular.Size20.Add())"
                         Disabled="true">
                Import CSV (Coming Soon)
            </FluentButton>
            <FluentButton Appearance="Appearance.Outline" 
                         IconStart="@(new Icons.Regular.Size20.Add())"
                         OnClick="OpenAddSchoolDialog">
                Add School
            </FluentButton>
        </FluentStack>
    </FluentStack>

    <FluentCard>
        @if (schools == null)
        {
            <FluentProgressRing>Loading schools...</FluentProgressRing>
        }
        else if (schools.Count == 0)
        {
            <FluentStack Orientation="Orientation.Vertical" VerticalGap="15">
                <div class="alert alert-info" role="alert">
                    No schools found. You can either add schools manually or seed all schools from the draft template.
                </div>
                <FluentButton Appearance="Appearance.Accent" 
                             IconStart="@(new Icons.Regular.Size20.Database())"
                             OnClick="SeedSampleSchoolsAsync"
                             Loading="@seedingSchools">
                    Seed All 143 Schools from Template
                </FluentButton>
                
                @if (!string.IsNullOrEmpty(seedingMessage))
                {
                    <div class="alert alert-success" role="alert">
                        @seedingMessage
                    </div>
                }
                
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert alert-danger" role="alert">
                        @errorMessage
                    </div>
                }
            </FluentStack>
        }
        else
        {
            <FluentDataGrid Items="@schools.AsQueryable()" ResizableColumns="true" Pagination="@pagination">
                <PropertyColumn Property="@(s => s.SchoolId)" Title="ID" Sortable="true" Align="Align.Start" />
                <PropertyColumn Property="@(s => s.Name)" Title="Name" Sortable="true" />
                <TemplateColumn Title="Logo" Align="Align.Center">
                    @if (!string.IsNullOrEmpty(context.LogoURL))
                    {
                        <img src="@context.LogoURL" alt="@context.Name" style="width: 32px; height: 32px;" 
                             onerror="this.style.display='none'" />
                    }
                    else
                    {
                        <FluentIcon Value="@(new Icons.Regular.Size20.Building())" Color="Color.Neutral" />
                    }
                </TemplateColumn>
                <PropertyColumn Property="@(s => s.AuctionCount)" Title="Used in Auctions" Sortable="true" Align="Align.Center" />
                <PropertyColumn Property="@(s => s.CreatedDate)" Title="Created" Format="MMM d, yyyy" Sortable="true" />
                <TemplateColumn Title="Actions" Align="Align.Center">
                    <FluentStack Orientation="Orientation.Horizontal" HorizontalGap="8">
                        <FluentButton Appearance="Appearance.Lightweight" 
                                     IconStart="@(new Icons.Regular.Size16.Edit())"
                                     OnClick="() => OpenEditSchoolDialog(context)">
                            Edit
                        </FluentButton>
                        <FluentButton Appearance="Appearance.Lightweight" 
                                     IconStart="@(new Icons.Regular.Size16.Delete())"
                                     OnClick="() => DeleteSchoolAsync(context)"
                                     Disabled="@(context.AuctionCount > 0)">
                            Delete
                        </FluentButton>
                    </FluentStack>
                </TemplateColumn>
            </FluentDataGrid>
            
            <FluentPaginator State="@pagination" />
        }
    </FluentCard>
</FluentStack>

<FluentDialog @ref="schoolDialog" Modal="true" TrapFocus="true" AriaLabel="School Form">
    <FluentDialogHeader ShowDismiss="true">
        <FluentStack VerticalAlignment="VerticalAlignment.Center">
            <FluentIcon Value="@(new Icons.Regular.Size24.Building())" />
            <FluentLabel Typo="Typography.PaneHeader">
                @(editingSchool == null ? "Add School" : "Edit School")
            </FluentLabel>
        </FluentStack>
    </FluentDialogHeader>

    <FluentDialogBody>
        <EditForm Model="@schoolForm" OnValidSubmit="@SaveSchoolAsync">
            <DataAnnotationsValidator />
            <FluentValidationSummary />

            <FluentStack Orientation="Orientation.Vertical" VerticalGap="15">
                <FluentTextField @bind-Value="schoolForm.Name" 
                               Label="School Name" 
                               Required="true"
                               Style="width: 100%;" />

                <FluentTextField @bind-Value="schoolForm.LogoURL" 
                               Label="Logo URL (External)" 
                               Placeholder="https://example.com/logo.svg"
                               Style="width: 100%;" />

                @if (!string.IsNullOrEmpty(schoolForm.LogoURL))
                {
                    <FluentStack Orientation="Orientation.Horizontal" VerticalAlignment="VerticalAlignment.Center" HorizontalGap="10">
                        <FluentButton Appearance="Appearance.Lightweight" 
                                     OnClick="TestLogoUrlAsync"
                                     Loading="@testingLogo">
                            Test Logo URL
                        </FluentButton>
                        @if (logoTestResult != null)
                        {
                            <FluentBadge Appearance="@(logoTestResult.IsValid ? Appearance.Accent : Appearance.Lightweight)"
                                        BackgroundColor="@(logoTestResult.IsValid ? "var(--accent-fill-rest)" : "var(--neutral-fill-secondary-rest)")"
                                        Color="@(logoTestResult.IsValid ? "var(--accent-foreground-rest)" : "var(--neutral-foreground-rest)")">
                                @logoTestResult.Message
                            </FluentBadge>
                        }
                    </FluentStack>
                }

                <FluentTextField @bind-Value="schoolForm.LogoFileName" 
                               Label="Logo File Name (Internal Fallback)" 
                               Placeholder="school-logo.svg"
                               Style="width: 100%;" />

                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert alert-danger" role="alert">
                        @errorMessage
                    </div>
                }
            </FluentStack>
        </EditForm>
    </FluentDialogBody>

    <FluentDialogFooter>
        <FluentButton Appearance="Appearance.Accent" 
                     Loading="@savingSchool"
                     OnClick="@(() => schoolForm?.OnSubmit())">
            @(editingSchool == null ? "Add School" : "Update School")
        </FluentButton>
        <FluentButton Appearance="Appearance.Neutral" 
                     OnClick="@(() => schoolDialog?.Hide())">
            Cancel
        </FluentButton>
    </FluentDialogFooter>
</FluentDialog>


@code {
    private List<SchoolDto>? schools;
    private PaginationState pagination = new() { ItemsPerPage = 20 };
    private FluentDialog? schoolDialog;
    private SchoolFormModel schoolForm = new();
    private SchoolDto? editingSchool;
    private bool savingSchool;
    private bool testingLogo;
    private bool seedingSchools;
    private string? errorMessage;
    private string? seedingMessage;
    private LogoTestResult? logoTestResult;

    protected override async Task OnInitializedAsync()
    {
        await LoadSchoolsAsync();
    }

    private async Task LoadSchoolsAsync()
    {
        try
        {
            var token = await JSRuntime.InvokeAsync<string?>("localStorage.getItem", "managementToken");
            if (!string.IsNullOrEmpty(token))
            {
                Http.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);
            }

            schools = await Http.GetFromJsonAsync<List<SchoolDto>>("/api/management/schools") ?? new List<SchoolDto>();
        }
        catch (Exception ex)
        {
            schools = new List<SchoolDto>();
            Console.WriteLine($"Error loading schools: {ex.Message}");
        }
    }

    private void OpenAddSchoolDialog()
    {
        editingSchool = null;
        schoolForm = new SchoolFormModel();
        errorMessage = null;
        logoTestResult = null;
        schoolDialog?.Show();
    }

    private void OpenEditSchoolDialog(SchoolDto school)
    {
        editingSchool = school;
        schoolForm = new SchoolFormModel
        {
            Name = school.Name,
            LogoURL = school.LogoURL,
            LogoFileName = school.LogoFileName
        };
        errorMessage = null;
        logoTestResult = null;
        schoolDialog?.Show();
    }

    private async Task SaveSchoolAsync()
    {
        savingSchool = true;
        errorMessage = null;
        StateHasChanged();

        try
        {
            var token = await JSRuntime.InvokeAsync<string?>("localStorage.getItem", "managementToken");
            if (!string.IsNullOrEmpty(token))
            {
                Http.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);
            }

            if (editingSchool == null)
            {
                // Add new school
                var response = await Http.PostAsJsonAsync("/api/management/schools", schoolForm);
                if (response.IsSuccessStatusCode)
                {
                    await LoadSchoolsAsync();
                    schoolDialog!.Hide();
                }
                else
                {
                    var error = await response.Content.ReadAsStringAsync();
                    errorMessage = $"Failed to add school: {error}";
                }
            }
            else
            {
                // Update existing school
                var response = await Http.PutAsJsonAsync($"/api/management/schools/{editingSchool.SchoolId}", schoolForm);
                if (response.IsSuccessStatusCode)
                {
                    await LoadSchoolsAsync();
                    schoolDialog!.Hide();
                }
                else
                {
                    var error = await response.Content.ReadAsStringAsync();
                    errorMessage = $"Failed to update school: {error}";
                }
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error saving school: {ex.Message}";
        }
        finally
        {
            savingSchool = false;
            StateHasChanged();
        }
    }

    private async Task DeleteSchoolAsync(SchoolDto school)
    {
        if (school.AuctionCount > 0)
        {
            return; // Button should be disabled, but double-check
        }

        // TODO: Add confirmation dialog
        try
        {
            var token = await JSRuntime.InvokeAsync<string?>("localStorage.getItem", "managementToken");
            if (!string.IsNullOrEmpty(token))
            {
                Http.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);
            }

            var response = await Http.DeleteAsync($"/api/management/schools/{school.SchoolId}");
            if (response.IsSuccessStatusCode)
            {
                await LoadSchoolsAsync();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error deleting school: {ex.Message}");
        }
    }

    private async Task TestLogoUrlAsync()
    {
        if (string.IsNullOrEmpty(schoolForm.LogoURL))
        {
            return;
        }

        testingLogo = true;
        logoTestResult = null;
        StateHasChanged();

        try
        {
            var token = await JSRuntime.InvokeAsync<string?>("localStorage.getItem", "managementToken");
            if (!string.IsNullOrEmpty(token))
            {
                Http.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);
            }

            var testRequest = new { LogoURL = schoolForm.LogoURL };
            var response = await Http.PostAsJsonAsync("/api/management/schools/test-logo", testRequest);
            
            if (response.IsSuccessStatusCode)
            {
                logoTestResult = await response.Content.ReadFromJsonAsync<LogoTestResult>();
            }
            else
            {
                logoTestResult = new LogoTestResult { IsValid = false, Message = "Test failed" };
            }
        }
        catch (Exception ex)
        {
            logoTestResult = new LogoTestResult { IsValid = false, Message = $"Error: {ex.Message}" };
        }
        finally
        {
            testingLogo = false;
            StateHasChanged();
        }
    }

    private async Task SeedSampleSchoolsAsync()
    {
        seedingSchools = true;
        errorMessage = null;
        seedingMessage = null;
        StateHasChanged();

        try
        {
            var token = await JSRuntime.InvokeAsync<string?>("localStorage.getItem", "managementToken");
            if (string.IsNullOrEmpty(token))
            {
                errorMessage = "Authentication token not found. Please refresh and try again.";
                return;
            }
            
            Http.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);
            seedingMessage = "Starting to seed schools...";

            // All schools from SampleDraftTemplate.csv
            var sampleSchools = new[]
            {
                new { Name = "Ohio State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/ohio_st.svg" },
                new { Name = "Texas", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/texas.svg" },
                new { Name = "Georgia", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/georgia.svg" },
                new { Name = "Michigan", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/michigan.svg" },
                new { Name = "Ole Miss", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/mississippi.svg" },
                new { Name = "Oregon", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/oregon.svg" },
                new { Name = "LSU", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/lsu.svg" },
                new { Name = "Penn State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/penn_st.svg" },
                new { Name = "Alabama", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/alabama.svg" },
                new { Name = "South Carolina", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/south_carolina.svg" },
                new { Name = "Miami (FL)", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/miami.svg" },
                new { Name = "Colorado", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/colorado.svg" },
                new { Name = "Notre Dame", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/notre_dame.svg" },
                new { Name = "Missouri", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/missouri.svg" },
                new { Name = "Tennessee", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/tennessee.svg" },
                new { Name = "Texas A&M", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/texas_a&m.svg" },
                new { Name = "Arizona", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/arizona.svg" },
                new { Name = "Iowa", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/iowa.svg" },
                new { Name = "Iowa State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/iowa_st.svg" },
                new { Name = "Kentucky", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/kentucky.svg" },
                new { Name = "North Carolina", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/north_carolina.svg" },
                new { Name = "Florida State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/florida_st.svg" },
                new { Name = "Minnesota", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/minnesota.svg" },
                new { Name = "Boston College", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/boston_college.svg" },
                new { Name = "Boise State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/boise_st.svg" },
                new { Name = "Virginia Tech", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/virginia_tech.svg" },
                new { Name = "Florida", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/florida.svg" },
                new { Name = "UCLA", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/ucla.svg" },
                new { Name = "Arkansas", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/arkansas.svg" },
                new { Name = "Louisville", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/louisville.svg" },
                new { Name = "Syracuse", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/syracuse.svg" },
                new { Name = "Kansas", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/kansas.svg" },
                new { Name = "Marshall", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/marshall.svg" },
                new { Name = "Maryland", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/maryland.svg" },
                new { Name = "TCU", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/tcu.svg" },
                new { Name = "North Dakota State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/north_dakota_st.svg" },
                new { Name = "Nebraska", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/nebraska.svg" },
                new { Name = "Kansas State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/kansas_st.svg" },
                new { Name = "Clemson", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/clemson.svg" },
                new { Name = "Toledo", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/toledo.svg" },
                new { Name = "Rutgers", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/rutgers.svg" },
                new { Name = "UCF", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/ucf.svg" },
                new { Name = "West Virginia", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/west_virginia.svg" },
                new { Name = "Oklahoma State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/oklahoma_st.svg" },
                new { Name = "Stanford", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/stanford.svg" },
                new { Name = "Oklahoma", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/oklahoma.svg" },
                new { Name = "California", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/california.svg" },
                new { Name = "Indiana", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/indiana.svg" },
                new { Name = "Texas Tech", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/texas_tech.svg" },
                new { Name = "East Carolina", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/east_carolina.svg" },
                new { Name = "Auburn", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/auburn.svg" },
                new { Name = "Arizona State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/arizona_st.svg" },
                new { Name = "USC", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/usc.svg" },
                new { Name = "Purdue", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/purdue.svg" },
                new { Name = "NC State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/nc_st.svg" },
                new { Name = "SMU", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/smu.svg" },
                new { Name = "Utah", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/utah.svg" },
                new { Name = "Virginia", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/virginia.svg" },
                new { Name = "Georgia Tech", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/georgia_tech.svg" },
                new { Name = "Wisconsin", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/wisconsin.svg" },
                new { Name = "Colorado State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/colorado_st.svg" },
                new { Name = "Bowling Green", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/bowling_green.svg" },
                new { Name = "BYU", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/byu.svg" },
                new { Name = "Utah State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/utah_st.svg" },
                new { Name = "Cincinnati", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/cincinnati.svg" },
                new { Name = "Washington State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/washington_st.svg" },
                new { Name = "William & Mary", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/william&mary.svg" },
                new { Name = "Tulane", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/tulane.svg" },
                new { Name = "Illinois", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/illinois.svg" },
                new { Name = "UTSA", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/utsa.svg" },
                new { Name = "Memphis", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/memphis.svg" },
                new { Name = "UConn", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/uconn.svg" },
                new { Name = "Central Arkansas", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/central_arkansas.svg" },
                new { Name = "Oregon State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/oregon_st.svg" },
                new { Name = "Sacramento State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/sacramento_st.svg" },
                new { Name = "Pitt", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/pittsburgh.svg" },
                new { Name = "UNLV", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/unlv.svg" },
                new { Name = "Western Michigan", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/western_michigan.svg" },
                new { Name = "Jacksonville State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/jacksonville_st.svg" },
                new { Name = "Fresno State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/fresno_st.svg" },
                new { Name = "Delaware", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/delaware.svg" },
                new { Name = "San Jose State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/san_jose_st.svg" },
                new { Name = "Baylor", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/baylor.svg" },
                new { Name = "Michigan State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/michigan_st.svg" },
                new { Name = "Washington", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/washington.svg" },
                new { Name = "Western Kentucky", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/western_kentucky.svg" },
                new { Name = "Eastern Washington", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/eastern_washington.svg" },
                new { Name = "Alabama A&M", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/alabama_a&m.svg" },
                new { Name = "Texas State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/texas_st.svg" },
                new { Name = "Arkansas State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/arkansas_st.svg" },
                new { Name = "North Texas", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/north_texas.svg" },
                new { Name = "Miami (OH)", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/miami_oh.svg" },
                new { Name = "Montana State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/montana_st.svg" },
                new { Name = "Vanderbilt", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/vanderbilt.svg" },
                new { Name = "Navy", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/navy.svg" },
                new { Name = "Wake Forest", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/wake_forest.svg" },
                new { Name = "Florida A&M", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/florida_a&m.svg" },
                new { Name = "Houston", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/houston.svg" },
                new { Name = "Northern Illinois", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/northern_illinois.svg" },
                new { Name = "Mississippi State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/mississippi_st.svg" },
                new { Name = "Nevada", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/nevada.svg" },
                new { Name = "Buffalo", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/buffalo.svg" },
                new { Name = "South Carolina State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/south_carolina_st.svg" },
                new { Name = "Jackson State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/jackson_st.svg" },
                new { Name = "Middlebury", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/middlebury.svg" },
                new { Name = "Cal Poly", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/cal_poly.svg" },
                new { Name = "South Alabama", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/south_alabama.svg" },
                new { Name = "Lindenwood", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/lindenwood.svg" },
                new { Name = "Southern Arkansas", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/southern_arkansas.svg" },
                new { Name = "Villanova", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/villanova.svg" },
                new { Name = "Wilfrid Laurier", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/laurier.png" },
                new { Name = "Towson", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/towson.svg" },
                new { Name = "Illinois State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/illinois_st.svg" },
                new { Name = "Northern Iowa", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/northern_iowa.svg" },
                new { Name = "Minnesota Duluth", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/minnesota_duluth.svg" },
                new { Name = "Howard", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/howard.svg" },
                new { Name = "Tulsa", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/tulsa.svg" },
                new { Name = "UC Davis", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/uc_davis.svg" },
                new { Name = "Morgan State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/morgan_st.svg" },
                new { Name = "South Dakota State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/south_dakota_st.svg" },
                new { Name = "Liberty", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/liberty.svg" },
                new { Name = "Wyoming", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/wyoming.svg" },
                new { Name = "South Florida", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/south_florida.svg" },
                new { Name = "Louisiana-Monroe", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/louisiana_monroe.svg" },
                new { Name = "Lenoir?Rhyne", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/lenoir_rhyne.png" },
                new { Name = "Georgia State", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/georgia_st.svg" },
                new { Name = "Florida International", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/florida_international.svg" },
                new { Name = "Coastal Carolina", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/coastal_carolina.svg" },
                new { Name = "Northwestern", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/northwestern.svg" },
                new { Name = "Georgia Southern", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/georgia_southern.svg" },
                new { Name = "Central Michigan", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/central_michigan.svg" },
                new { Name = "Duke", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/duke.svg" },
                new { Name = "North Carolina A&T", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/north_carolina_a&t.svg" },
                new { Name = "Massachusetts", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/umass.svg" },
                new { Name = "Hawaii", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/hawaii.svg" },
                new { Name = "Holy Cross", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/holy_cross.svg" },
                new { Name = "Louisiana Tech", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/la_tech.svg" },
                new { Name = "Charlotte", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/charlotte.svg" },
                new { Name = "James Madison", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/james_madison.svg" },
                new { Name = "New Mexico", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/new_mexico.svg" },
                new { Name = "Abilene Christian", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/abilene_christian.svg" },
                new { Name = "Eastern Kentucky", LogoURL = "https://d9ioojyvhqpok.cloudfront.net/assets/logos/_colleges/eastern_kentucky.svg" }
            };

            int created = 0;
            int skipped = 0;
            int errors = 0;
            
            for (int i = 0; i < sampleSchools.Length; i++)
            {
                var school = sampleSchools[i];
                try
                {
                    // Update progress every 10 schools
                    if (i % 10 == 0)
                    {
                        seedingMessage = $"Seeding school {i + 1} of {sampleSchools.Length}: {school.Name}";
                        StateHasChanged();
                    }
                    
                    var createDto = new
                    {
                        Name = school.Name,
                        LogoURL = school.LogoURL,
                        LogoFileName = (string?)null
                    };

                    var response = await Http.PostAsJsonAsync("/api/management/schools", createDto);
                    
                    if (response.IsSuccessStatusCode)
                    {
                        created++;
                    }
                    else if (response.StatusCode == System.Net.HttpStatusCode.Conflict)
                    {
                        skipped++; // School already exists
                    }
                    else if (response.StatusCode == System.Net.HttpStatusCode.Unauthorized)
                    {
                        errorMessage = "Authentication failed. Please refresh the page and try again.";
                        return;
                    }
                    else
                    {
                        var errorContent = await response.Content.ReadAsStringAsync();
                        Console.WriteLine($"Failed to create {school.Name}: {response.StatusCode} - {errorContent}");
                        errors++;
                    }
                }
                catch (Exception ex)
                {
                    Console.WriteLine($"Exception creating {school.Name}: {ex.Message}");
                    errors++;
                }
            }

            await LoadSchoolsAsync();
            seedingMessage = $"Seeding complete: {created} created, {skipped} already existed, {errors} errors";
            
            if (errors > 0)
            {
                errorMessage = $"Some errors occurred during seeding. Check browser console for details.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error during seeding: {ex.Message}";
            Console.WriteLine($"Error seeding schools: {ex.Message}");
        }
        finally
        {
            seedingSchools = false;
            StateHasChanged();
        }
    }

    public class SchoolDto
    {
        public int SchoolId { get; set; }
        public string Name { get; set; } = "";
        public string? LogoURL { get; set; }
        public string? LogoFileName { get; set; }
        public DateTime CreatedDate { get; set; }
        public DateTime ModifiedDate { get; set; }
        public int AuctionCount { get; set; }
    }

    public class SchoolFormModel
    {
        [Required]
        [MaxLength(100)]
        public string Name { get; set; } = "";

        [MaxLength(500)]
        public string? LogoURL { get; set; }

        [MaxLength(100)]
        public string? LogoFileName { get; set; }

        public EditForm? FormReference { get; set; }

        public void OnSubmit()
        {
            FormReference?.OnValidSubmit.InvokeAsync();
        }
    }

    public class LogoTestResult
    {
        public bool IsValid { get; set; }
        public int StatusCode { get; set; }
        public string? ContentType { get; set; }
        public string Message { get; set; } = "";
    }
}